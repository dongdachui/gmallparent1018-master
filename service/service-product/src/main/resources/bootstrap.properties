# 制作配置属性！
server.port = 8206
spring.application.name=service-product
spring.profiles.active=dev
spring.cloud.nacos.discovery.server-addr=192.168.200.129:8848
spring.cloud.nacos.config.server-addr=192.168.200.129:8848
spring.cloud.nacos.config.prefix=${spring.application.name}
spring.cloud.nacos.config.file-extension=yaml
spring.cloud.nacos.config.shared-configs[0].data-id=common.yaml

# 提示信息. 数据源名称可以随意写 ：
spring.shardingsphere.datasource.names=ds1,ds2
#spring.shardingsphere.datasource.names=ds1,ds2,ds3
# 配置第 1 个数据源  主：3306
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://192.168.200.129:3306/gmall_product?characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=root

# 配置第 2 个数据源  从：3307
spring.shardingsphere.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds2.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds2.jdbc-url=jdbc:mysql://192.168.200.129:3307/gmall_product?characterEncoding=utf-8&useSSL=false
spring.shardingsphere.datasource.ds2.username=root
spring.shardingsphere.datasource.ds2.password=root

# 配置第 3 个数据源  从：3308
#spring.shardingsphere.datasource.ds3.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.ds3.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds3.jdbc-url=jdbc:mysql://192.168.200.129:3308/gmall_product?characterEncoding=utf-8&useSSL=false
#spring.shardingsphere.datasource.ds3.username=root
#spring.shardingsphere.datasource.ds3.password=root

# 配置读写分离的规则 atguigu
spring.shardingsphere.rules.readwrite-splitting.data-sources.atguigu.type=Static
# 配置写库
spring.shardingsphere.rules.readwrite-splitting.data-sources.atguigu.props.write-data-source-name=ds1
# 配置读库
spring.shardingsphere.rules.readwrite-splitting.data-sources.atguigu.props.read-data-source-names=ds2
# 配置负载均衡的算法.
spring.shardingsphere.rules.readwrite-splitting.data-sources.atguigu.load-balancer-name=read-lb
# 负载均衡算法类型
spring.shardingsphere.rules.readwrite-splitting.load-balancers.read-lb.type=ROUND_ROBIN

